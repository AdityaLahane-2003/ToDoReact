{"version":3,"sources":["components/InputArea.jsx","components/ToDoItem.jsx","components/App.jsx","index.js"],"names":["InputArea","props","className","onChange","type","value","item","placeholder","onClick","ToDoItem","onChecked","id","App","useState","setItem","listItem","setListItem","deleteItem","console","log","prev","filter","index","event","target","map","element","key","ReactDOM","render","document","getElementById"],"mappings":"4MAeeA,MAdf,SAAmBC,GACnB,OAAQ,yBAAKC,UAAU,QACvB,2BACEC,SAAUF,EAAME,SAChBC,KAAK,OACLC,MAAOJ,EAAMK,KACbC,YAAY,aAEd,4BAAQC,QAASP,EAAMO,SACrB,8BAAM,UCaOC,MArBf,SAAkBR,GAQhB,OACS,wBAECO,QAAS,WACPP,EAAMS,UAAUT,EAAMU,MAIvBV,EAAMK,OC+BJM,MA7Cf,WACE,MAAwBC,mBAAS,IAAG,mBAA7BP,EAAI,KAAEQ,EAAO,KACpB,EAAgCD,mBAAS,IAAG,mBAArCE,EAAQ,KAAEC,EAAW,KAY5B,SAASC,EAAWN,GAClBO,QAAQC,IAAIR,GACZK,GAAY,SAACI,GACX,OAAOA,EAAKC,QAAO,SAACf,EAAMgB,GACxB,OAAOA,IAAUX,QAKvB,OACE,yBAAKT,UAAU,aACb,yBAAKA,UAAU,WACb,4BAAI,eAEP,kBAAC,EAAS,CAACC,SAxBd,SAAsBoB,GACpBT,EAAQS,EAAMC,OAAOnB,QAuBeC,KAAMA,EAAME,QArBlD,SAAqBe,GACnBP,GAAY,SAACI,GACX,MAAM,GAAN,mBAAWA,GAAI,CAAEd,OAEnBQ,EAAQ,OAkBN,6BACE,4BACGC,EAASU,KAAI,SAACC,EAASJ,GAAK,OAC3B,kBAAC,EAAQ,CACPX,GAAIW,EACJK,IAAKL,EACLhB,KAAMoB,EACNhB,UAAWO,WCpCzBW,IAASC,OAAO,kBAAC,EAAG,MAAKC,SAASC,eAAe,U","file":"static/js/main.13be24ab.chunk.js","sourcesContent":["import React from \"react\";\r\nfunction InputArea(props) {\r\nreturn (<div className=\"form\">\r\n<input\r\n  onChange={props.onChange}\r\n  type=\"text\"\r\n  value={props.item}\r\n  placeholder=\"Add Item\"\r\n/>\r\n<button onClick={props.onClick}>\r\n  <span>Add</span>\r\n</button>\r\n</div>)\r\n}\r\n\r\nexport default InputArea; ","import React, { useState } from \"react\";\r\n\r\nfunction ToDoItem(props) {\r\n  // const [isLine, setLine] = useState(false);\r\n  // function lineThrough() {\r\n  //   setLine((prev) => {\r\n  //     return !prev;\r\n  //   });\r\n  // }\r\n  // const add = props.item;\r\n  return (\r\n           <li\r\n            // onClick={lineThrough}\r\n            onClick={()=>{\r\n              props.onChecked(props.id)\r\n            }}\r\n            // style={{ textDecoration: isLine && \"line-through\" }}\r\n          >\r\n            {props.item}\r\n          </li>\r\n  );\r\n}\r\n\r\nexport default ToDoItem;\r\n","import React, { useState } from \"react\";\nimport InputArea from \"./InputArea\";\nimport ToDoItem from \"./ToDoItem\";\n\nfunction App() {\n  const [item, setItem] = useState(\"\");\n  const [listItem, setListItem] = useState([]);\n\n  function handleChange(event) {\n    setItem(event.target.value);\n  }\n  function handleClick(event) {\n    setListItem((prev) => {\n      return [...prev, item];\n    });\n    setItem(\"\");\n  }\n\n  function deleteItem(id) {\n    console.log(id);\n    setListItem((prev) => {\n      return prev.filter((item, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n     <InputArea onChange={handleChange} item={item} onClick={handleClick}/>\n      <div>\n        <ul>\n          {listItem.map((element, index) => (\n            <ToDoItem\n              id={index}\n              key={index}\n              item={element}\n              onChecked={deleteItem}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE: Make this app work by applying what you've learnt.\n//1. When new text is written into the input, its state should be saved.\n//2. When the add button is pressed, the current data in the input should be\n//added to an array.\n//3. The <ul> should display all the array items as <li>s\n"],"sourceRoot":""}